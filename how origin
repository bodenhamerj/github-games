[33mcommit 2710412040512a0f05dae7be3e89972946307864[m
Author: Cynthia Rich <crichID@github.com>
Date:   Mon Aug 24 23:17:26 2015 -0400

    change index.html to inde.html

[1mdiff --git a/inde.html b/inde.html[m
[1mnew file mode 100644[m
[1mindex 0000000..a42c9ee[m
[1m--- /dev/null[m
[1m+++ b/inde.html[m
[36m@@ -0,0 +1,449 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m  <title>Javascript Tetris</title>[m
[32m+[m[32m  <style>[m
[32m+[m[32m    body      { font-family: Helvetica, sans-serif; }[m
[32m+[m[32m    #tetris   { margin: 1em auto; padding: 1em; border: 4px solid black; border-radius: 10px; background-color: #F8F8F8; }[m
[32m+[m[32m    #stats    { display: inline-block; vertical-align: top; }[m
[32m+[m[32m    #canvas   { display: inline-block; vertical-align: top; background: url(texture.jpg); box-shadow: 10px 10px 10px #999; border: 2px solid #333; }[m
[32m+[m[32m    #menu     { display: inline-block; vertical-align: top; position: relative; }[m
[32m+[m[32m    #menu p   { margin: 0.5em 0; text-align: center; }[m
[32m+[m[32m    #menu p a { text-decoration: none; color: black; }[m
[32m+[m[32m    #upcoming { display: block; margin: 0 auto; background-color: #E0E0E0; }[m
[32m+[m[32m    #score    { color: green; font-weight: bold; vertical-align: middle; }[m
[32m+[m[32m    #rows     { color: blue; font-weight: bold; vertical-align: middle; }[m
[32m+[m[32m    #stats    { position: absolute; bottom: 0em; right: 1em; }[m
[32m+[m[32m    @media screen and (min-width:   0px) and (min-height:   0px)  { #tetris { font-size: 0.75em; width: 250px; } #menu { width: 100px; height: 200px; } #upcoming { width:  50px; height:  50px; } #canvas { width: 100px; height: 200px; } } /* 10px chunks */[m
[32m+[m[32m    @media screen and (min-width: 400px) and (min-height: 400px)  { #tetris { font-size: 1.00em; width: 350px; } #menu { width: 150px; height: 300px; } #upcoming { width:  75px; height:  75px; } #canvas { width: 150px; height: 300px; } } /* 15px chunks */[m
[32m+[m[32m    @media screen and (min-width: 500px) and (min-height: 500px)  { #tetris { font-size: 1.25em; width: 450px; } #menu { width: 200px; height: 400px; } #upcoming { width: 100px; height: 100px; } #canvas { width: 200px; height: 400px; } } /* 20px chunks */[m
[32m+[m[32m    @media screen and (min-width: 600px) and (min-height: 600px)  { #tetris { font-size: 1.50em; width: 550px; } #menu { width: 250px; height: 500px; } #upcoming { width: 125px; height: 125px; } #canvas { width: 250px; height: 500px; } } /* 25px chunks */[m
[32m+[m[32m    @media screen and (min-width: 700px) and (min-height: 700px)  { #tetris { font-size: 1.75em; width: 650px; } #menu { width: 300px; height: 600px; } #upcoming { width: 150px; height: 150px; } #canvas { width: 300px; height: 600px; } } /* 30px chunks */[m
[32m+[m[32m    @media screen and (min-width: 800px) and (min-height: 800px)  { #tetris { font-size: 2.00em; width: 750px; } #menu { width: 350px; height: 700px; } #upcoming { width: 175px; height: 175px; } #canvas { width: 350px; height: 700px; } } /* 35px chunks */[m
[32m+[m[32m    @media screen and (min-width: 900px) and (min-height: 900px)  { #tetris { font-size: 2.25em; width: 850px; } #menu { width: 400px; height: 800px; } #upcoming { width: 200px; height: 200px; } #canvas { width: 400px; height: 800px; } } /* 40px chunks */[m
[32m+[m[32m  </style>[m
[32m+[m[32m</head>[m
[32m+[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m  <div id="tetris">[m
[32m+[m[32m    <div id="menu">[m
[32m+[m[32m      <p id="start"><a href="javascript:play();">Press Space to Play.</a></p>[m
[32m+[m[32m      <p><canvas id="upcoming"></canvas></p>[m
[32m+[m[32m      <p>score <span id="score">00000</span></p>[m
[32m+[m[32m      <p>rows <span id="rows">0</span></p>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <canvas id="canvas">[m
[32m+[m[32m      Sorry, this example cannot be run because your browser does not support the &lt;canvas&gt; element[m
[32m+[m[32m    </canvas>[m
[32m+[m[32m  </div>[m
[32m+[m
[32m+[m[32m  <script src="stats.js"></script>[m
[32m+[m[32m  <script>[m
[32m+[m
[32m+[m[32m    //-------------------------------------------------------------------------[m
[32m+[m[32m    // base helper methods[m
[32m+[m[32m    //-------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m    function get(id)        { return document.getElementById(id);  }[m
[32m+[m[32m    function hide(id)       { get(id).style.visibility = 'hidden'; }[m
[32m+[m[32m    function show(id)       { get(id).style.visibility = null;     }[m
[32m+[m[32m    function html(id, html) { get(id).innerHTML = html;            }[m
[32m+[m
[32m+[m[32m    function timestamp()           { return new Date().getTime();                             }[m
[32m+[m[32m    function random(min, max)      { return (min + (Math.random() * (max - min)));            }[m
[32m+[m[32m    function randomChoice(choices) { return choices[Math.round(random(0, choices.length-1))]; }[m
[32m+[m
[32m+[m[32m    if (!window.requestAnimationFrame) { // http://paulirish.com/2011/requestanimationframe-for-smart-animating/[m
[32m+[m[32m      window.requestAnimationFrame = window.webkitRequestAnimationFrame ||[m
[32m+[m[32m                                     window.mozRequestAnimationFrame    ||[m
[32m+[m[32m                                     window.oRequestAnimationFrame      ||[m
[32m+[m[32m                                     window.msRequestAnimationFrame     ||[m
[32m+[m[32m                                     function(callback, element) {[m
[32m+[m[32m                                       window.setTimeout(callback, 1000 / 60);[m
[32m+[m[32m                                     }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //-------------------------------------------------------------------------[m
[32m+[m[32m    // game constants[m
[32m+[m[32m    //-------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m    var KEY     = { ESC: 27, SPACE: 32, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40 },[m
[32m+[m[32m        DIR     = { UP: 0, RIGHT: 1, DOWN: 2, LEFT: 3, MIN: 0, MAX: 3 },[m
[32m+[m[32m        stats   = new Stats(),[m
[32m+[m[32m        canvas  = get('canvas'),[m
[32m+[m[32m        ctx     = canvas.getContext('2d'),[m
[32m+[m[32m        ucanvas = get('upcoming'),[m
[32m+[m[32m        uctx    = ucanvas.getContext('2d'),[m
[32m+[m[32m        speed   = { start: 0.6, decrement: 0.005, min: 0.1 }, // how long before piece drops by 1 row (seconds)[m
[32m+[m[32m        nx      = 10, // width of tetris court (in blocks)[m
[32m+[m[32m        ny      = 20, // height of tetris court (in blocks)[m
[32m+[m[32m        nu      = 5;  // width/height of upcoming preview (in blocks)[m
[32m+[m
[32m+[m[32m    //-------------------------------------------------------------------------[m
[32m+[m[32m    // game variables (initialized during reset)[m
[32m+[m[32m    //-------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m    var dx, dy,        // pixel size of a single tetris block[m
[32m+[m[32m        blocks,        // 2 dimensional array (nx*ny) representing tetris court - either empty block or occupied by a 'piece'[m
[32m+[m[32m        actions,       // queue of user actions (inputs)[m
[32m+[m[32m        playing,       // true|false - game is in progress[m
[32m+[m[32m        dt,            // time since starting this game[m
[32m+[m[32m        current,       // the current piece[m
[32m+[m[32m        next,          // the next piece[m
[32m+[m[32m        score,         // the current score[m
[32m+[m[32m        vscore,        // the currently displayed score (it catches up to score in small chunks - like a spinning slot machine)[m
[32m+[m[32m        rows,          // number of completed rows in the current